<!DOCTYPE project>
<!--
 * MIST: eMail Import System for TntConnect
 * Copyright (C) 2010 Tom Hallman
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 * 
 * For more information, visit https://github.com/tomhallman/mist
-->

<project name="MIST" default="usage" basedir="..">

    <property file="devel/build.properties"/>
    
    <taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask" classpath="devel/dist/macosx/appbundler-1.0.jar"/>

    <target name="usage">
        <echo message="" />
        <echo message="MIST project management build file" />
        <echo message="----------------------------------" />
        <echo message="clean        --> Clean all output dirs" />
        <echo message="cleannodist  --> Clean all output dirs except dist" />
        <echo message="dist.windows --> Create MIST distributions for Windows" />
        <echo message="dist.macosx  --> Create MIST distributions for Mac OS X" />
        <echo message="" />
    </target>

    
    <target name="echoprops">
        <echo message="App name: ${app.name}"/>
        <echo message="App version: ${app.version}"/>
        <echo message="User: ${user.name}"/>
        <echo message="System: ${os.name} ${os.arch} ${os.version}"/>
        <echo message="Ant version: ${ant.version}"/>
        <echo message="Java version: ${java.version}"/>
        <echo message="Base path: ${basedir}"/>
        <echo message="Configuration path: ${confDir}"/>
        <echo message="-------------------------------"/>
    </target>
    
    
    <target name="clean">
        <echo message="Cleaning all output directories..." />
        <delete dir="build" failonerror="false" deleteonexit="true" />
    	<delete dir="pack" failonerror="false" deleteonexit="true" />
        <delete dir="dist" failonerror="false" deleteonexit="true" />
    </target>


    <target name="cleannodist">
        <echo message="Cleaning output directories (except dist)..." />
        <delete dir="build" failonerror="false" deleteonexit="true" />
        <delete dir="pack" failonerror="false" deleteonexit="true" />
    </target>

            
    <target name="build" depends="cleannodist">
        <mkdir dir="build" />
        <echo message="Building java sources (using ${app.dist} SWT)... (/build)" />
        <javac srcdir="src/java" destdir="build" debug="${isDevel}" deprecation="on" nowarn="true" includeantruntime="false">
            <classpath>
                <fileset dir="lib" id="lib.fileset">
                    <include name="apache-commons/*.jar"/>
                    <include name="javamail/*.jar"/>
                    <include name="jericho/*.jar"/>
                    <include name="jopt-simple/*.jar"/>
                    <include name="logging/*.jar"/>
                    <include name="ucanaccess/*.jar"/>
                    <include name="swt/*.jar"/>
                    <include name="swt/${app.dist}/*.jar"/>
                </fileset>
            </classpath>
        </javac>
        <!-- Copy non-Java application resources (images, etc.) -->
        <copy todir="build" overwrite="true" includeEmptyDirs="false">
            <fileset dir="src/java" excludes="**/*.java" />
        </copy>
    </target>

   
    <target name="jar" depends="build">
        <echo message="Building MIST library... (/build/mist.jar)" />
    	<!-- Get classpath for manifest -->
        <pathconvert property="jar.classpath" pathsep=" " refid="lib.fileset">
            <mapper>
                <flattenmapper />
            </mapper>
        </pathconvert>
        <!-- Build JAR file -->
    	<jar destfile="build/mist.jar" update="true">
            <fileset dir="build">
                <include name="**" />
            </fileset>
   			<manifest>
   				<attribute name="Main-Class" value="net.sf.mist_tnt.MIST" />
   				<attribute name="Class-Path" value="${jar.classpath}" />
   			    <attribute name="Implementation-Version" value="${app.version}" />
                <attribute name="Implementation-Vendor" value="${app.publisher}"/>
                <attribute name="Implementation-Title" value="${app.name}"/>
                <attribute name="Built-By" value="${user.name}"/>
   			</manifest>
        </jar>
    </target>


	<target name="pack.windows" depends="jar">
        <mkdir dir="pack" />
		<echo message="Packaging MIST for Windows... (/pack)" />
	    <!-- Copy Java libraries -->
        <copy todir="pack/lib" flatten="true">
            <fileset refid="lib.fileset"/>
            <fileset dir="${basedir}">
                <include name="build/mist.jar" />
            </fileset>
        </copy>
	    <!-- Copy docs & conf -->
        <copy todir="pack">
            <fileset dir="${basedir}">
                <include name="docs/**" />
                <include name="conf/**" />
            </fileset>
        </copy>
	    <!-- Copy misc resources -->
		<copy todir="pack" flatten="true">
			<fileset dir="${basedir}">
			    <include name="bin/mist.bat" />
			    <include name="src/images/mist.ico" />
			</fileset>
		</copy>
	    <!-- Copy arch-specific JRE -->
	    <antcall target="pack.windows.jre" />
	</target>
	
	
    <target name="pack.windows.jre">
        <fileset id="jre.fileset" dir="devel\dist\jre" includes="jre-*-windows-${jre.arch}.tar.gz" />
        <pathconvert property="jre.filepath" refid="jre.fileset" />
        <basename property="jre.filename" file="${jre.filepath}" />
        <tempfile property="jre.tempdir" destDir="${java.io.tmpdir}" prefix="jre-${jre.arch}-" />
        <echo message="Extracting JRE: ${jre.filename}... (/pack/jre)" />
        <!-- untar the archive -->
        <untar src="${jre.filepath}" dest="${jre.tempdir}" compression="gzip" />
        <!-- move the jre<version> directory to just "jre" -->
        <path id="jre.extracted.path">
            <dirset dir="${jre.tempdir}">
                <include name="jre*" />
            </dirset>
        </path>
        <property name="jre.extracted.dir" refid="jre.extracted.path" />
        <move file="${jre.extracted.dir}" tofile="${jre.tempdir}/jre" />
        <!-- Remove optional JRE stuff to reduce file size -->
        <!-- See http://www.oracle.com/technetwork/java/javase/jre-8-readme-2095710.html -->        
        <delete>
            <fileset dir="${jre.tempdir}/jre/bin">
                <include name="dtplugin/**" />
                <include name="plugin2/**" />
                <include name="deploy.dll" />
                <include name="javafx*.dll" />
                <include name="jfx*.dll" />
            </fileset>
            <fileset dir="${jre.tempdir}/jre/lib">
                <include name="deploy.jar" />
                <include name="plugin.jar" />
            </fileset>
        </delete>
        <!-- move the jre into the pack directory -->
        <move todir="pack" file="${jre.tempdir}/jre" />
    </target>
	
	
    <target name="dist.windows.arch" depends="pack.windows">
	    <mkdir dir="dist" />
        <echo message="Creating MIST distribution for Windows (${app.dist})... (/dist)" />
        <!-- Create appinfo.txt for InnoSetup file -->
        <property name="appinfoPath" value="pack/appinfo.txt"/>
        <echo message="Creating appinfo.txt... (/${appinfoPath})" />
        <echo file="${appinfoPath}" append="false">
            ; Auto-generated by MIST build script
            #define AppId "${app.id}"
            #define AppName "${app.name}"
            #define AppComment "${app.longname}"
            #define AppVersionShort "${app.version}"
            #define AppVersionLong "${app.version}"
            #define AppURL "${app.url}"
            #define AppCopyright "${app.copyright}"
            #define AppPublisher "${app.publisher}"
            #define AppExeName "mist.bat"
            #define AppDist "${app.dist}"
            #define AppArch "${app.arch}"
        </echo>
        <echo message="Building installer... (/dist)" />
        <exec dir="." executable="cmd">
            <arg line="/c devel\dist\windows\dist.bat" />
        </exec>
    </target>

	
    <target name="dist.windows" depends="echoprops,clean">
        <antcall target="dist.windows.arch">
            <param name="app.dist" value="win64"/>
            <param name="app.arch" value="x64"/>
            <param name="jre.arch" value="x64"/>
        </antcall>
        <antcall target="dist.windows.arch">
            <param name="app.dist" value="win32"/>
            <param name="app.arch" value="x86"/>
            <param name="jre.arch" value="i586"/>
        </antcall>
    </target>

    
    <target name="pack.macosx" depends="jar">
        <mkdir dir="pack" />
        <echo message="Packaging MIST for Mac OS X... (/pack)" />
	    <!-- Copy Java libraries -->
        <copy todir="pack/lib" flatten="true">
            <fileset refid="lib.fileset"/>
            <fileset dir="${basedir}">
                <include name="build/mist.jar" />
            </fileset>
        </copy>
    </target>

	
    <target name="dist.macosx.jre.cleanup"> <!-- Does not work; not sure why! -->
    	<!-- <fileset id="jre.fileset" file="dist/{${app.name}.app/Contents/Plugins/jdk*/Contents/Home/jre" /> -->
    	<fileset id="jre.fileset" file="dist/MIST.app/Contents/Plugins/jdk1.8.0_101.jdk/Contents/Home/jre" />
        <pathconvert property="jre.filepath" refid="jre.fileset" />
        <echo message="Cleaning up unnecessary files in packaged JRE... (${jre.filepath})" />
        <!-- Remove optional JRE stuff to reduce file size-->
        <!-- See http://www.oracle.com/technetwork/java/javase/jre-8-readme-2095710.html -->        
        <delete>
            <fileset dir="${jre.filepath}/lib">
                <include name="fxplugins.dylib" />
            	<include name="libglass.dylib" />
            	<include name="libglib-lite.dylib" />
            	<include name="libgstreamer-lite.dylib" />
            	<include name="libjavafx_*.dylib" />
            	<include name="libjfx*.dylib" />
            </fileset>
        </delete>
    </target>
	
	<target name="dist.macosx.bundle" depends="pack.macosx">
        <mkdir dir="dist" />
        <echo message="Creating MIST.app bundle for Mac OS X... (/dist)" />
        <bundleapp
            outputdirectory="dist"
            name="${app.name}"
            displayname="${app.name}"
            identifier="net.sf.mist_tnt.MIST"
            icon="src/images/mist.icns"
            shortversion="${app.version}"
            copyright="${app.copyright}"
            mainclassname="net/sf/mist_tnt/MIST"
            applicationCategory="public.app-category.business">
        	<runtime dir="${java.home}/.." />
            <classpath file="pack/lib/*.jar" />
        	<option value="-Xdock:icon=Contents/Resources/mist.icns"/>
            <option value="-XstartOnFirstThread"/>
        </bundleapp>
		<!-- <antcall target="dist.macosx.jre.cleanup" /> -->
    	<!-- Rename JavaAppLauncher to MIST -->
        <move file="dist/${app.name}.app/Contents/MacOS/JavaAppLauncher" 
            toFile="dist/${app.name}.app/Contents/MacOS/${app.name}" />
        <replace file="dist/${app.name}.app/Contents/Info.plist" token="JavaAppLauncher" value="${app.name}"/>
    	<!-- Retina display support -->
    	<replace file="dist/${app.name}.app/Contents/Info.plist">
    		<replacetoken><![CDATA[</dict>]]></replacetoken>
    		<replacevalue><![CDATA[<key>NSHighResolutionCapable</key><true/></dict>]]></replacevalue>
    	</replace>

    	<!-- Copy docs & conf -->
        <copy todir="dist/${app.name}.app/Contents">
            <fileset dir="${basedir}">
                <include name="docs/**" />
                <include name="conf/**" />
            </fileset>
        </copy>
    </target>

	
	<target name="dist.macosx.diskimage">
		<echo message="Creating MIST.dmg disk image... (/dist)" />
        <exec executable="hdiutil" os="Mac OS X">
            <arg value="create"/>
            <arg value="-srcfolder"/>
            <arg value="dist/${app.name}.app"/>
            <arg value="-ov"/>
            <arg value="dist/${app.name}.dmg"/>
        </exec>
	</target>
	

    <target name="dist.macosx" depends="echoprops,clean">
        <antcall target="dist.macosx.bundle">
            <param name="app.dist" value="macosx"/>
        </antcall>
    	<!-- <antcall target="dist.macosx.diskimage" /> -->
    </target>

</project>
